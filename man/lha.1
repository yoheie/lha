.\" -*- indent-tabs-mode: nil -*-
.\"
.\" Copyright (c) 2008 Koji Arai
.\"
.\" Permission is hereby granted, free of charge, to any person
.\" obtaining a copy of this software and associated documentation files
.\" (the "Software"), to deal in the Software without restriction,
.\" including without limitation the rights to use, copy, modify, merge,
.\" publish, distribute, sublicense, and/or sell copies of the Software,
.\" and to permit persons to whom the Software is furnished to do so,
.\" subject to the following conditions:
.\"
.\" The above copyright notice and this permission notice shall be
.\" included in all copies or substantial portions of the Software.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
.\" EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
.\" NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS
.\" BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN
.\" ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
.\" CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
.\" SOFTWARE.

.TH LHA "1" "February 2008" "LHa for UNIX" "User Commands"

.SH NAME
LHa for UNIX \- Traditional compressor and archiver.

.SH SYNOPSIS

lha
[\-]\fIcommand\fR[\fIoptions\fR] [\-\fIoptions\fR ...]
archive_file.lzh
[files...]
.TP
.B Create an archive
.nf
lha c archive_file.lzh files or directories.
.fi
.TP
.B Extract the archive
.nf
lha x archive_file.lzh [specific files]
.fi
.TP
.B List the archive
.nf
lha l archive_file.lzh [specific files]
\.fi
or
.nf
lha archive_file.lzh [specific files]
.fi
.SH DESCRIPTION
The LHa for UNIX is an archiver and compressor using the LZSS and the Huffman encoding compression algorithm.
It is possible to create the archive file called the "LZH" file, and possible to extract it.

It is possible to extract the self-extracting archive file called the SFX file (mainly created on the MS-DOS and the MS-Windows), but impossible to create it.

.SH COMMANDS

.TP
\fB\-c\fR, \fB\-a\fR
Specified files are compressed and archived into an archive file.
When the directory path is specified, files under the directory are archived recursively.

The \fB\-c\fR command creates new archive. When the archive file already exists, it is overwritten.
The \fB\-a\fR command creates new archive or appends to existent archive.

.TP
\fB\-x\fR, \fB\-e\fR
The \fB\-x\fR command extracts uncompressed files from the archive file.
When the specific_files is specified, Only these files or directories are extracted.
The \fB\-e\fR command is synonym of \fB\-x\fR.

.TP
\fB\-l\fR, \fB\-v\fR
The \fB\-l\fR command lists the contents of archive to stdout. The \fB\-v\fR command is more verbosely command.
The term of list is below.
.RS
.TP
PERMISSION
For the Unix specific archive, it is permission string like \fBls\fR(1).
For the others, it is the string of OS type.
.TP
UID/GID
For the Unix specific archive, it is user-id and group-id.
For the others, it is space only.
.TP
PACKED
The size of compressed file. it is shown by the \fB\-v\fR command.
.TP
SIZE
The original file size.
.TP
RATIO
Compressed ratio (PACKED / SIZE * 100).
.TP
METHOD
The string of the compressing method.  it is shown by the \fB\-v\fR command.
.RS
.TP
\-lh0\-
no compressed.
.TP
\-lzs\-
2k sliding dictionary (created by the LArc)
.TP
\-lz4\-
no compressed. (created by the LArc)
.TP
\-lz5\-
4k sliding dictionary (created by the LArc)
.TP
\-lh1\-
4k sliding dictionary and dynamic Huffman encoding.
.TP
\-lh2\-
8k sliding dictionary and dynamic Huffman encoding.
.TP
\-lh3\-
8k sliding dictionary and static Huffman encoding.
.TP
\-lh4\-
4k sliding dictionary and static Huffman encoding.
.TP
\-lh5\-
8k sliding dictionary and static Huffman encoding.
.TP
\-lh6\-
32k sliding dictionary and static Huffman encoding.
.TP
\-lh7\-
64k sliding dictionary and static Huffman encoding.
.TP
\-lhd\- directory

.RE
The LHa for Unix is able to create the methods \-lh0\-, \-lh1\-, \-lh5\-, \-lh6\-, \-lh7\- and \-lhd\-.

.TP
CRC
The CRC-16 code. It is shown by the \fB\-v\fR command.

.TP
STAMP
The timestamp of the file. It is shown the full-time format with the \fB\-v\fR option.

.TP
LV
The header level. It is shown by the \fB\-v\fR option.

The level 0 and 1 are deprecated. The level 2 header is widely used.
The level 3 header is more improved, however, it is rarely used.

The LHa for Unix is able to create the 0, 1 and 2. (Level 3 is readable.)

.TP
NAME
Filename or directory name.
.RE

.TP
\fB\-u\fR
The \fB\-u\fR command updates the archive. When the specified files are newer than the content of the archive, they are replaced.
The \fB\-a\fR command always replace with the specified files.

.TP
\fB\-m\fR
The \fB\-m\fR command moves specified files into the archive.
It is same as the \fB\-ad\fR (\fB\-a\fR command and \fB\-d\fR option).

.TP
\fB\-d\fR
The \fB\-d\fR command delete the specified files from the archive.

.TP
\fB\-p\fR
The \fB\-p\fR command print the content of the archived files to stdout.
Each contents are printed with filename as header string like below.

    ::::::::
    filename
    ::::::::
    contents of the file.....

If you wish to non-display the header string, use with the \fB\-q\fR option.

.TP
\fB\-t\fR
The \fB\-t\fR command is the same as the \fB\-x\fR command except to non-extract actually.
This command is used to check the archive file.

.SH OPTIONS

.TP
\fB\-q\fR[\fInum\fR]
The \fB\-q\fR option specifies the level of quiet mode. \fInum\fR is 0, 1, 2 or nothing.

The \fB\-q\fR0 option is default level.
The \fB\-q\fR1 option inhibits the extracting indicator (progress bar).
The \fB\-q\fR2 option inhibits other output decoration. this option has the effects of the \fB\-f\fR option.
The \fB\-q\fR is same as \fB\-q\fR2.

.TP
\fB\-v\fR
When listing with the \fB\-l\fR or the \fB\-v\fR command, the \fB\-v\fR option lists more verbosely.

Elements are listed one file per two lines. The first line shows the filename, following line shows other elements and the timestamp (full-time format) and the header level.

In special case, the \fB\-v\fR command trailing two \fB\-v\fR options like,
lha vvv archive_file.lzh
shows the header dump. This is a debugging feature.

.TP
\fB\-n\fR
The \fB\-n\fR option displays the message instead of doing the command action.

.TP
\fB\-f\fR
Force extraction. When extracted file already exists,
normally, lha asks for the Overwriting, or Skipping or All files skipping.
This option forces overwrite without asking.

.TP
\fB\-t\fR
The \fB\-t\fR option treats archiving or extracting files as text files.
When extracting, CR codes on the end of each lines are removed. (convert DOS format text to UNIX format text)
When archiving, oppositely, CR codes append on the end of each lines. (convert UNIX format text to DOS format text)
With the \fB\-e\fR option, KANJI code are converted as well.

.TP
\fB\-o\fR[5\-7]
When archiving, the \fB\-o\fR option specifies the compressing method.
the \fB\-o\fR5 means to use the \-lh5\- method. It is widely used and default method.
the \fB\-o\fR6 and \fB\-o\fR7 means to use the \-lh6\- and \-lh7\- method.
These methods reduced archive file more than the \-lh5\- method.
Just the \fB\-o\fR means to use the \-lh1\- method.

It is possible to include some methods in an archive file.

.TP
\fB\-d\fR
When archiving, specified files are removed from the disk.

.TP
\fB\-i\fR
When extracting, ignore the directory path. extracting file is put flatten on the current directory.

.TP
\fB\-z\fR
When archiving, do not compress the specified file. (archive with the \-lh0\- method)

.TP
\fB\-g\fR
When extracting, this option does nothing. It exists for historical reason.

When archiving with this option, archive with general (obsolete) header format.
It uses the level 0 header, filename is uppercased in the archive,Unix specific elements such as permission, user-id and so on are not saved.

.TP
\fB\-0\fR, \fB\-1\fR, \fB\-2\fR
The \-0, \-1 and \-2 option specifies the version of the format header (called the header level).

.TP
\fB\-e\fR
When archiving, the \fB\-e\fR option regard the coding of text as EUC-JP and convert it to Shift_JIS.
When extracting, convert from Shift_JIS to EUC-JP.

.TP
\fB\-b\fR
When extracting, If it is possible, the MacBinary is interpreted.
This option is experimental.

.TP
\fB\-w\fR=\fIdir\fR
When extracting, extract files are create in the \fIdir\fR directory.

An equal mark is omittable like, \-w dir.

.TP
\fB\-x\fR=\fIpattern\fR
When archiving, exclude files matched the glob pattern \fIpattern\fR.
It is possible to use this option anywhere in the command line.

An equal mark is omittable like, \-x pattern.

.SH LONG OPTIONS

.TP
\fB\-\-archive\-kanji\-code\fR={euc,sjis,utf8,cap,none}
Specifies the multi-byte encoding of the archived pathname.

Default is sjis as Shift_JIS.

On LZH file, the encoding of pathname in archive is not ruled.
However, In Japan, Shift_JIS (exactly Windows-31J) is defacto standard.

.TP
\fB\-\-system\-kanji\-code\fR={euc,sjis,utf8,cap,none}
This option specifies the encoding of the pathname on the filesystem.
Default is euc as EUC-JP.

.TP
\fB\-\-extract\-broken\-archive\fR
If CRC error occurrs when extracting, and its archive is created by old version of LHa for UNIX, this option may be last resort.

.TP
\fB\-\-convert\-filename\-case\fR
When extracting, the archive format is MS-DOS or Generic, and the
whole filename (and directory name) is uppercase, extracted
filename will be in lowercase.

It was default behavior on the old version of the LHa for UNIX.
However, many software create the LZH archive with case-sensitive filename even if it is a MS-DOS type archive.
Therefore, its behavior was deprecated as default.

.TP
\fB\-\-timestamp\-archive\fR
When archiving or deleting, the archive timestamp reset most recent timestamp in the archive contents.

.TP
\fB\-\-ignore\-mac\-files\fR
When archiving, the Mac specific files are ignored.

This option is same as the `\fB\-x\fR "._*" \fB\-x\fR ".DS_Store" \fB\-x\fR "Icon\\r"'.

.TP
\fB\-\-traditional\fR
Turn on the compatible mode for the old version.
For now, same as the \fB\-\-convert\-filename\-case\fR.

.TP
\fB\-\-help\fR
Show the briefly usage.

.TP
\fB\-\-version\fR
Show the version string.

.SH SEE ALSO
\fBzip\fR(1), \fBunzip\fR(1), \fBgzip\fR(1), \fBgunzip\fR(1), \fBzcat\fR(1)

.SH AUTHOR
Koji Arai <jca02266@gmail.com>

.SH HISTORY
In 1988, Haruhiko Okumura developed the LZARI. It was experimental implementation used the LZSS and the arithmetic coding.

Kazuhiko Miki developed the LArc. (it was used the \-lzs\- method)

Haruyasu Yoshizaki developed the LZHUFF (it was experimental code with the LZSS and the Huffman coding), and developed the LHarc version 1.00.

In 1989, the LHarc was ported on UNIX by Yoichi Tagawa.

Haruhiko Okumura and Haruyasu Yoshizaki improved the algorithm of the LHarc.

In 1990, the LHx 2.00 which is the LHarc improvement was implemented by Haruyasu Yoshizaki.
The ar002 was implemented by Haruhiko Okumura. It is distributed as the Public Domain Software.

In 1991, Haruyasu Yoshizaki improved the LHx and renamed to the LHa, and renamed again to the LHA.

In Japan, This version (LHA 2.10 - 2.13) was widely used on MS-DOS and MS-Windows.
Many software and many documents are distributed with this archive format.

In 1992, It was ported on UNIX by Masaru Oki. It was called the LHa for UNIX, and it was improved by Nobutaka Watazaki, Tsugio Okamoto and many users.

The LHa for UNIX was used to exchange files for MS-DOS world, and its source codes might be used interestingly and implement another LZH archiver.

However, its license is vague. so it is not recognized as the Open Source Software defined by the Open Source Initiative.
